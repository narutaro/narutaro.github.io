<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>apollo on Yak Shaving</title>
    <link>https://narutaro.github.io/tags/apollo/</link>
    <description>Recent content in apollo on Yak Shaving</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/narutaro&#34;&gt;narutaro&lt;/a&gt; 2021</copyright>
    <lastBuildDate>Sun, 04 Jul 2021 11:29:41 +0900</lastBuildDate><atom:link href="https://narutaro.github.io/tags/apollo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Searching for an Item with Apollo</title>
      <link>https://narutaro.github.io/posts/search-an-item-with-apollo/</link>
      <pubDate>Sun, 04 Jul 2021 11:29:41 +0900</pubDate>
      
      <guid>https://narutaro.github.io/posts/search-an-item-with-apollo/</guid>
      <description>Introduction Last time was to get list of todo from Apollo. This time I am going to add task search functionality by id.
Code const { ApolloServer, gql } = require(&amp;#39;apollo-server&amp;#39;); const typeDefs = gql` type Task { id: ID! name: String! isActive: Boolean! createdAt: Int updatedAt: Int owner: String } type Query { tasks: [Task] task(id: ID!): Task # ❶ } `; const tasks = [ { id: 1, name: &amp;#34;Soak in an Onsen&amp;#34;, isActive: true}, { id: 2, name: &amp;#34;Sing Karaoke&amp;#34;, isActive: false}, { id: 3, name: &amp;#34;See cherry blossom&amp;#34;, isActive: true}, ] const resolvers = { Query: { tasks: () =&amp;gt; tasks, task (parent, args, context, info) { // ❷  const { id } = args; return context.</description>
    </item>
    
    <item>
      <title>Simple list view with Apollo</title>
      <link>https://narutaro.github.io/posts/lets-review-all-the-settings/</link>
      <pubDate>Sun, 27 Jun 2021 16:29:03 +0900</pubDate>
      
      <guid>https://narutaro.github.io/posts/lets-review-all-the-settings/</guid>
      <description>Introduction I&amp;rsquo;ve been playing around with GraphQL lately and that&amp;rsquo;s fun. After playing with GraphQL for a while, I thought I&amp;rsquo;d write about it in a series of articles.
The best way to get started with GraphQL now is to start with these two great sites to grasp the concept.
 Introduction to GraphQL The Fullstack Tutorial for GraphQL  However, as soon as you follow these tutorials, you will start setting up the database and ORM.</description>
    </item>
    
  </channel>
</rss>
